cmake_minimum_required (VERSION 2.6)
project (AdventOfCode)

set(CMAKE_CXX_FLAGS "--std=c++14 -O3")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/contrib/cmake")

add_executable(day01a day01a.cpp)
add_executable(day01b day01b.cpp)
add_executable(day02a day02a.cpp)
add_executable(day02b day02b.cpp)
add_executable(day04a day04a.cpp)
add_executable(day04b day04b.cpp)
add_executable(day06a day06a.cpp)
add_executable(day06b day06b.cpp)
add_executable(day07a day07a.cpp)
add_executable(day07b day07b.cpp)
add_executable(day08a day08a.cpp)
add_executable(day08b day08b.cpp)
add_executable(day09a day09a.cpp)
add_executable(day09b day09b.cpp)

set(Boost_USE_STATIC_LIBS ON)
find_package(Boost)
if(Boost_FOUND)
	include_directories(${Boost_INCLUDE_DIRS})

	add_executable(day03a day03a.cpp)
	add_executable(day03b day03b.cpp)

	target_link_libraries(day03a ${Boost_LIBRARIES})
	target_link_libraries(day03b ${Boost_LIBRARIES})
endif()

find_package(OpenSSL)
if(OPENSSL_FOUND)
	include_directories(${OPENSSL_INCLUDE_DIRS})

	add_executable(day05a day05a.cpp)
	add_executable(day05b day05b.cpp)

	link_libraries(crypto)
	target_link_libraries(day05a ${OPENSSL_LIBRARIES})
	target_link_libraries(day05b ${OPENSSL_LIBRARIES})
endif()
